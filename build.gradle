plugins {
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'java'
}

allprojects{
	repositories {
		mavenCentral()
	}
}

subprojects{

	apply plugin: 'java-library'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	group = 'com.hanghe'
	version = '1.0'
	sourceCompatibility = '17'

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	dependencies {
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		implementation 'org.springframework.boot:spring-boot-starter-actuator'
		implementation 'mysql:mysql-connector-java:8.0.33'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-jdbc'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
		implementation 'com.h2database:h2'

		testImplementation 'org.testcontainers:junit-jupiter'
		testImplementation 'org.testcontainers:mysql'

		runtimeOnly 'mysql:mysql-connector-java'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'org.mockito:mockito-inline:5.x.x'

		// QueryDSL
		implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
		annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
		annotationProcessor "jakarta.annotation:jakarta.annotation-api"
		annotationProcessor "jakarta.persistence:jakarta.persistence-api"

		// swagger
		implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'

		implementation 'org.reflections:reflections:0.10.2'
	}

	def generated = 'src/main/generated'
	tasks.withType(JavaCompile) {
		options.getGeneratedSourceOutputDirectory().set(file(generated))
	}
	sourceSets {
		main.java.srcDirs += [ generated ]
	}
	clean {
		delete file(generated)
	}

	test {
		useJUnitPlatform()
	}

}

bootJar { enabled = false}
jar {
	enabled = false
}
